{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAKtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAdYP,SAASC,cAAc,yBAE/Be,iBAAiB,UAgBlC,SAAyBC,GACvBA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOlB,EAAMmB,OAC1BC,EAAYF,OAAOjB,EAAKkB,OACxBE,EAAcH,OAAOhB,EAAOiB,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCL,GAAcG,EAEdjB,EAAcmB,EAAGL,GACdM,MAAK,EAACnB,SAAEA,EAAUS,MAAAW,MACjBC,QAAQC,IAAIC,QAAQC,SACpBjC,EAAAkC,OAAOF,QACL,uBAAqBvB,QAAiBoB,MAAU,IAGnDM,OAAM,EAAC1B,SAAEA,EAAUS,MAAAkB,MAClBN,QAAQC,IAAIM,MAAMJ,SAClBjC,EAAAkC,OAAOI,QAAQ,sBAAoB7B,QAAiB2B,MAAU,IAGnElC,EAAKqC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\nbtnCreatePromise.addEventListener('submit', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  };\n\nfunction onPromiseCreate(e) {\n  e.preventDefault();\n\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1){\n    inputDelay += inputStep;\n\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        console.log(success.message)\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(error.message)\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n   form.reset();\n  }\n\n}\n\n// const refs = {\n//   body: document.querySelector('body'),\n//   form: document.querySelector('form.form'),\n//   delay: document.querySelector('[name=\"delay\"]'),\n//   step: document.querySelector('[name=\"step\"]'),\n//   amount: document.querySelector('[name=\"amount\"]'),\n// }\n\n// refs.body.style.backgroundColor = '#f7eff4';\n// refs.form.addEventListener('click', onPromiseCreate);\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// function onPromiseCreate(e) {\n//   e.preventDefault();\n\n//   let valueDelay = Number(refs.delay.value);\n//   let step = Number(refs.step.value);\n//   let amount = Number(refs.amount.value);\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     let promiseDelay = valueDelay + step * i;\n\n//     createPromise(i, promiseDelay)\n//       .then(({ position, delay }) => {\n//         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//   }\n// }"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","e","preventDefault","inputDelay","Number","value","inputStep","inputAmount","i","then","delay2","console","log","success","message","Notify","catch","delay3","error","failure","reset"],"version":3,"file":"03-promises.d1445678.js.map"}